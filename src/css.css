/* center the body content horizontally */
/* flow direction is vertical */
body {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.hidden {
  position: absolute;
  width: 0;
  height: 0;
  pointer-events: none;
  opacity: 0;
  user-select: none;
  overflow: hidden;
}

/* show the word list in a grid of width 4 */
#word-list {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 1rem;
  list-style: none;
  padding: 0;
  margin: 0;
}

#word-list>li {
  text-align: center;
  border-radius: 1lh;
}

/* if a word is marked found, highlight it */
#word-list>li.found {
  background-color: oklch(75% 75% calc(var(--hue) * 1deg));
}

#jamo-board {
  display: grid;
  grid-template-columns: repeat(var(--width), 1fr);
  gap: var(--gap);
  padding: 0;
  margin: 0;
  position: relative;
  aspect-ratio: 1;
  touch-action: none;
  -webkit-tap-highlight-color: transparent;
}

#jamo-board>i {
  text-align: center;
  display: inline-block;
  width: calc(var(--size));
  height: calc(var(--size));
  font-size: var(--size);
  line-height: 1;
  user-select: none;
  cursor: pointer;
  font-style: normal;
  position: relative;
}

#jamo-board>i::after {
  content: attr(data-jamo);
  display: inline-block;
}

:root[data-mode="dark"] #jamo-board>i::before {
  background-color: #fff;
}
:root[data-mode="light"] #jamo-board>i::before {
  background-color: #000;
}
:root[data-mode="light"] #jamo-board>.completion-bar::before {
  opacity: 0.6;
}
@media (prefers-color-scheme: dark) {
  :root[data-mode="system"] #jamo-board>i::before {
    background-color: #fff;
  }
}
@media (prefers-color-scheme: light) {
  :root[data-mode="system"] #jamo-board>i::before {
    background-color: #000;
  }
  :root[data-mode="system"] #jamo-board>.completion-bar::before {
    opacity: 0.6;
  }
}

#jamo-board>i::before {
  content: '';
  display: inline-block;
  width: calc(var(--size) * 1.414);
  height: calc(var(--size) * 1.414);
  top: 50%;
  left: 50%;
  border-radius: 50%;
  pointer-events: none;
  opacity: 0;
  position: absolute;
  transform: translate(-50%, -50%);
  z-index: -1;
}
#jamo-board:not(:active)>i:hover::before {
  opacity: 0.15;
}

#jamo-board>.completion-bar {
  /* remove from grid flow */
  position: absolute;
  top: calc(var(--top));
  left: calc(var(--left));
  width: calc(var(--width));
  height: calc(var(--height));

  /* outline: 1px solid red; */
  pointer-events: none;
}

#jamo-board>.completion-bar::before {

  content: '';
  position: absolute;
  background-color: oklch(75% 75% calc(var(--hue) * 1deg)); /* Line color */
  height: calc(var(--thick)); /* Line thickness */

  /* Calculate the bottom-left point of the line */
  top: 50%;
  left: 50%;

  /* Length of the line using hypot(), assuming --delta-x and --delta-y are defined */
  width: calc(var(--hypot));

  /* Rotate line using atan2(), converting result from radians to degrees */
  transform: translate(-50%, -50%) rotate(var(--angle));

  /* Ensure the rotation point is the start of the line */
  transform-origin: center;
  mix-blend-mode: overlay;
  opacity: 0.5;

  z-index: -2;

  border-radius: calc(var(--thick));
}

nav {
  height: 2rem;
}

#dark-mode-toggle {
  position: absolute;
  z-index: 1;
  top: 1rem;
  right: 1rem;
  width: 2rem;
  height: 2rem;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  transform: rotate(45deg);
  border-radius: 50%;
  overflow: hidden;
  padding: 0;
  view-transition-name: none;
  -webkit-tap-highlight-color: transparent;
}

.no-transition, .no-transition>* {
  transition: none !important;
}

#dark-mode-toggle>#sun, #dark-mode-toggle>#moon {
  position: absolute;
  font-size: 1.5rem;
  line-height: 1;
  text-align: center;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  transition: clip-path 0.5s;
}

#dark-mode-toggle>#sun {
  color-scheme: light;
  background-color: buttonface;
}

#dark-mode-toggle>#moon {
  color-scheme: dark;
  background-color: buttonface;
}

#dark-mode-toggle>#sun::before,
#dark-mode-toggle>#moon::before {
  display: inline-block;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) rotate(-45deg);
}

#dark-mode-toggle>#sun::before {
  content: '‚òÄÔ∏è';
}

#dark-mode-toggle>#moon::before {
  content: 'üåô';
}

:root[data-mode="system"] {
  color-scheme: dark light;
}

:root[data-mode="dark"] {
  color-scheme: dark;
}

:root[data-mode="light"] {
  color-scheme: light;
}

#dark-mode-toggle[data-mode="system"]>#sun {
  /* left half of square*/
  clip-path: rect(0 50% 100% 0);
}
#dark-mode-toggle[data-mode="system"]>#moon {
  /* right half of square */
  clip-path: rect(0 100% 100% 50%);
}
#dark-mode-toggle[data-mode="dark"]>#sun {
  /* hidden to left side */
  clip-path: rect(0 0 100% 0);
}
#dark-mode-toggle[data-mode="dark"]>#moon {
  /* fully visible */
  clip-path: rect(0 100% 100% 0);
}
#dark-mode-toggle[data-mode="light"]>#sun {
  /* fully visible*/
  clip-path: rect(0 100% 100% 0);
}
#dark-mode-toggle[data-mode="light"]>#moon {
  /* hidden to the right side */
  clip-path: rect(0 100% 100% 100%);
}

#currentJamoCompletions {
  position: absolute;
}

/* side-to-side layout for desktop */
@media screen and (min-width: 720px) {
  #word-list {
    /* grid-template-columns: repeat(2, 1fr); */
    animation: none;
  }
}

main {
  font-size: 0
}
main>* {
  font-size: 1rem;
}

.noresize {
  resize: none;
}

#file-wrapper {
  display: inline-block;
  position: relative;
  width: 150px; /* Adjust as needed */
  height: 100px; /* Adjust as needed */
  text-align: center;
  border: 1px solid buttonborder;
  border-radius: 2px;
}
#file-wrapper:where(:focus-visible, :focus-within) {
  outline: -webkit-focus-ring-color auto 1px;
}

#select-game-state-file {
  cursor: pointer;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0;
}

#file-wrapper::before {
  content: 'üìÅ'; /* Folder emoji */
  font-size: 50px; /* Adjust emoji size */
  display: block;
  margin-bottom: 10px; /* Space between emoji and text */
}

#file-wrapper::after {
  content: attr(data-text); /* Text below emoji */
  display: block;
  font-size: 14px; /* Adjust text size */
}

::backdrop {
  background: #0004;
}


#clear-game-state {
  position: relative;
  --pressed: 0;
}

#clear-game-state:active {
  --pressed: 100%;
}
#clear-game-state:active::after {
  transition: clip-path 2s linear;
}

#clear-game-state::after {
  display: inline-block;
  content: '';
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  background: currentColor;
  opacity: 0.5;
  clip-path: xywh(0 0 var(--pressed) 100%);
}

.br {
  display: block;
  width: 0;
  height: 1rem;
  min-height: 1rem;
}
